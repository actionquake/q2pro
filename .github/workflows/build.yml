name: build

on:
  push:
    branches: [master, aqtion, ci]
  pull_request:
    branches: [master, aqtion]

env:
  MESON_ARGS: >-
    --fatal-meson-warnings
    -Danticheat-server=true
    -Dclient-gtv=true
    -Doss=auto
    -Dpacketdup-hack=true
    -Dtests=true
    -Dvariable-fps=true
    -Dwerror=true
    -Daqtion-build=true
    -Ddiscord-sdk=true

jobs:
  mingw:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        #arch: ["i686", "x86_64"]
        arch: ["x86_64"]
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64 meson nasm

      - name: Build
        run: |
          meson setup --cross-file=.ci/${{ matrix.arch }}-w64-mingw32.txt ${{ env.MESON_ARGS }} builddir
          ninja -vC builddir

      - name: Generate Win Mingw archives
        uses: actions/upload-artifact@v3
        with:
          name: q2pro-mingw-${{ matrix.arch }}
          path: |
            builddir/q2pro.exe
            builddir/q2proded.exe

  msvc:
    runs-on: windows-latest
    strategy:
      matrix:
        #arch: ["x86", "x64"]
        arch: ["x64"]
    steps:
      - uses: actions/checkout@v2

      - uses: ilammy/msvc-dev-cmd@d8610e2b41c6d0f0c3b4c46dad8df0fd826c68e1
        with:
          arch: ${{ matrix.arch }}

      - name: Install dependencies
        run: pip3 install --no-input meson ninja

      - name: Build
        run: |
          meson setup ${{ env.MESON_ARGS }} -Dvorbis:werror=false builddir
          ninja -vC builddir

      - name: Generate Win MSVC archives
        uses: actions/upload-artifact@v3
        with:
          name: q2pro-msvc-${{ matrix.arch }}
          path: |
            builddir/q2pro.exe
            builddir/q2proded.exe

  linux32:
    runs-on: [self-hosted, x86]
    strategy:
      matrix:
        cc: [gcc, clang]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          meson setup ${{ env.MESON_ARGS }} builddir
          ninja -vC builddir
        env:
          CC: ${{ matrix.cc }}
          CFLAGS: -m32
          CXXFLAGS: -m32
          LD_LIBRARY_PATH: /usr/lib/i386-linux-gnu/

      - name: patchelf path to discord_game_sdk.so
        run: |
          patchelf --replace-needed /home/github/actions-runner/_work/q2pro/q2pro/extern/discord/lib/x86/discord_game_sdk.so ./discord_game_sdk.so builddir/q2pro

      - name: Generate Linux x86 archives
        uses: actions/upload-artifact@v3
        with:
          name: q2pro-lin-x86-${{ matrix.cc }}
          path: |
            builddir/q2pro
            builddir/q2proded

  linux64:
    #runs-on: ubuntu-22.04
    runs-on: [self-hosted, x86]
    strategy:
      matrix:
        cc: [gcc, clang]
    steps:
      - uses: actions/checkout@v2

      # - name: Install dependencies
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y meson libsdl2-dev libopenal-dev \
      #     libpng-dev libjpeg-dev zlib1g-dev mesa-common-dev \
      #     libcurl4-gnutls-dev libx11-dev libxi-dev \
      #     libwayland-dev wayland-protocols patchelf

      - name: Build
        run: |
          meson setup ${{ env.MESON_ARGS }} builddir
          ninja -vC builddir
        env:
          CC: ${{ matrix.cc }}

      - name: patchelf path to discord_game_sdk.so
        run: |
          patchelf --replace-needed /home/github/actions-runner/_work/q2pro/q2pro/extern/discord/lib/x86_64/discord_game_sdk.so ./discord_game_sdk.so builddir/q2pro

      - name: Generate Linux x64 archives
        uses: actions/upload-artifact@v3
        with:
          name: q2pro-lin-${{ matrix.cc }}
          path: |
            builddir/q2pro
            builddir/q2proded

  linuxARM64:
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y meson libsdl2-dev libopenal-dev \
          libpng-dev libjpeg-dev zlib1g-dev mesa-common-dev \
          libcurl4-gnutls-dev libx11-dev libxi-dev \
          libwayland-dev wayland-protocols libdecor-0-dev patchelf \
          libogg-dev libvorbis-dev

      - name: Build
        run: |
          meson setup ${{ env.MESON_ARGS }} builddir
          ninja -vC builddir
        env:
          CC: "gcc"

      - name: Generate Linux ARM archives
        uses: actions/upload-artifact@v3
        with:
          name: q2pro-lin-arm64
          path: |
            builddir/q2pro
            builddir/q2proded
